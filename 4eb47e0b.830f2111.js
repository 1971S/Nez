(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{111:function(e,t,r){"use strict";r.d(t,"a",(function(){return d})),r.d(t,"b",(function(){return g}));var n=r(0),i=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=i.a.createContext({}),p=function(e){var t=i.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=p(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},b=i.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(r),b=n,g=d["".concat(c,".").concat(b)]||d[b]||u[b]||a;return r?i.a.createElement(g,o(o({ref:t},l),{},{components:r})):i.a.createElement(g,o({ref:t},l))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,c=new Array(a);c[0]=b;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,c[1]=o;for(var l=2;l<a;l++)c[l]=r[l];return i.a.createElement.apply(null,c)}return i.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},162:function(e,t,r){"use strict";r.r(t),t.default=r.p+"assets/images/spritelight-f7446ee8a5cac300195558ff3617b051.png"},163:function(e,t,r){"use strict";r.r(t),t.default=r.p+"assets/files/spritelight_assets-0b8e10a641de51150a4fcc82523a2caf.zip"},80:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return o})),r.d(t,"toc",(function(){return s})),r.d(t,"default",(function(){return p}));var n=r(3),i=r(7),a=(r(0),r(111)),c={id:"SpriteLights",title:"Sprite Lights"},o={unversionedId:"features/Graphics/Lighting/SpriteLights",id:"features/Graphics/Lighting/SpriteLights",isDocsHomePage:!1,title:"Sprite Lights",description:"SpriteLight rendering is a simple 2d light rendering technique where sprites are used to form a lightmap.",source:"@site/docs\\features\\Graphics\\Lighting\\SpriteLights.md",slug:"/features/Graphics/Lighting/SpriteLights",permalink:"/Nez/docs/features/Graphics/Lighting/SpriteLights",editUrl:"https://github.com/prime31/Nez/edit/master/Nez.github.io/docs/features/Graphics/Lighting/SpriteLights.md",version:"current",sidebar:"someSidebar",previous:{title:"Deferred Lighting",permalink:"/Nez/docs/features/Graphics/Lighting/DeferredLighting"},next:{title:"Rendering",permalink:"/Nez/docs/features/Graphics/Rendering"}},s=[],l={toc:s};function p(e){var t=e.components,c=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},l,c,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"SpriteLight rendering is a simple 2d light rendering technique where sprites are used to form a lightmap.\nThis lightmap is then used to illuminate the scene."),Object(a.b)("p",null,Object(a.b)("img",{alt:"SpriteLight",src:r(162).default})),Object(a.b)("div",{className:"admonition admonition-info alert alert--info"},Object(a.b)("div",{parentName:"div",className:"admonition-heading"},Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",{parentName:"h5",className:"admonition-icon"},Object(a.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(a.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(a.b)("div",{parentName:"div",className:"admonition-content"},Object(a.b)("p",{parentName:"div"},"The assets from this example can be downloaded ",Object(a.b)("a",{target:"_blank",href:r(163).default},"here"),"."))),Object(a.b)("h1",{id:"sample"},"Sample"),Object(a.b)("p",null,"We start by setting up the render layers"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cs"},"public const int SpriteLightRenderLayer = 1;\npublic const int BackgroundRenderLayer = 2;\n")),Object(a.b)("p",null,"Next, we add a renderer for the drawables in our scene."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cs"},"AddRenderer(new RenderLayerRenderer(0, BackgroundRenderLayer));\n")),Object(a.b)("p",null,"Next, we create a renderer for our light map. We assign a ",Object(a.b)("inlineCode",{parentName:"p"},"RenderTexture")," to which the light map will be rendered. "),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"RenderTargetClearColor")," is used to create a slight ambient color. If you have a scene that is reasonably lit, you could use, for example, ",Object(a.b)("inlineCode",{parentName:"p"},"new Color(100, 100, 100, 255);")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cs"},"RenderLayerRenderer lightRenderer = AddRenderer(new RenderLayerRenderer(-1, SpriteLightRenderLayer));\nlightRenderer.RenderTexture = new RenderTexture();\nlightRenderer.RenderTargetClearColor = new Color(10, 10, 10, 255);\n")),Object(a.b)("p",null,"Next, we add our background, which we render to ",Object(a.b)("inlineCode",{parentName:"p"},"BackgroundRenderLayer"),"."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cs"},'var bgTexture = Content.Load<Texture2D>("background");\nvar bgEntity = CreateEntity("bg");\nbgEntity.Position = Screen.Center;\nbgEntity.Scale = new Vector2(9.4f);\nvar bgSprite = bgEntity.AddComponent(new SpriteRenderer(bgTexture));\nbgSprite.RenderLayer = BackgroundRenderLayer;\n')),Object(a.b)("p",null,"Next we add our light, which we render to ",Object(a.b)("inlineCode",{parentName:"p"},"SpriteLightRenderLayer"),"."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cs"},'var lightTexture = Content.Load<Texture2D>("spritelight");\nvar lightEntity = CreateEntity("light");\nlightEntity.Position = new Vector2(Screen.Width / 2f, Screen.Height / 2f);\nlightEntity.Scale = new Vector2(4);\nvar lightSprite = lightEntity.AddComponent(new SpriteRenderer(lightTexture));\nlightSprite.RenderLayer = SpriteLightRenderLayer;\n')),Object(a.b)("p",null,"And finally we add the ",Object(a.b)("inlineCode",{parentName:"p"},"SpriteLightPostProcessor"),", which renders the scene using the lightmap ",Object(a.b)("inlineCode",{parentName:"p"},"RenderTexture"),"."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cs"},"AddPostProcessor(new SpriteLightPostProcessor(0, lightRenderer.RenderTexture));\n")))}p.isMDXComponent=!0}}]);